{"ast":null,"code":"var _jsxFileName = \"E:\\\\Complete Web Development\\\\worldwise\\\\src\\\\components\\\\Form.jsx\",\n  _s = $RefreshSig$();\n// \"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=0&longitude=0\"\n\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport styles from \"./Form.module.css\";\n// import { useNavigate } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport { useUrlPosition } from \"../hooks/useUrlPosition\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function convertToEmoji(countryCode) {\n  const codePoints = countryCode.toUpperCase().split(\"\").map(char => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\nfunction Form() {\n  _s();\n  const [lat, lng] = useUrlPosition();\n  console.log(lat);\n  const [isGeoLoading, setIsGeoLoading] = useState(false);\n  const [cityName, setCityName] = useState(\"\");\n  // const [country, setCountry] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [notes, setNotes] = useState(\"\");\n  const BASE_Url = \"https://api.bigdatacloud.net/data/reverse-geocode-client\";\n  useEffect(function () {\n    async function fetchCitiesData() {\n      try {\n        setIsGeoLoading(true);\n        const res = await fetch(`%{BASE_URL}?latitude=${lat}&longitude=${lng}`);\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsGeoLoading(false);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cityName\",\n        children: \"City name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"cityName\",\n        onChange: e => setCityName(e.target.value),\n        value: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: [\"When did you go to \", cityName, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        onChange: e => setDate(e.target.value),\n        value: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"notes\",\n        children: [\"Notes about your trip to \", cityName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"notes\",\n        onChange: e => setNotes(e.target.value),\n        value: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"/wgTENkFq9xHgLshbO6LnYQIP64=\", false, function () {\n  return [useUrlPosition];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Button","styles","BackButton","useUrlPosition","useEffect","jsxDEV","_jsxDEV","convertToEmoji","countryCode","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","Form","_s","lat","lng","console","log","isGeoLoading","setIsGeoLoading","cityName","setCityName","date","setDate","Date","notes","setNotes","BASE_Url","fetchCitiesData","res","fetch","err","className","form","children","row","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","e","target","value","buttons","type","_c","$RefreshReg$"],"sources":["E:/Complete Web Development/worldwise/src/components/Form.jsx"],"sourcesContent":["// \"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=0&longitude=0\"\n\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport styles from \"./Form.module.css\";\n// import { useNavigate } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport { useUrlPosition } from \"../hooks/useUrlPosition\";\nimport { useEffect } from \"react\";\n\nexport function convertToEmoji(countryCode) {\n  const codePoints = countryCode\n    .toUpperCase()\n    .split(\"\")\n    .map((char) => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\n\nfunction Form() {\n  const [lat, lng] = useUrlPosition();\n  console.log(lat);\n  const [isGeoLoading, setIsGeoLoading] = useState(false);\n  const [cityName, setCityName] = useState(\"\");\n  // const [country, setCountry] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [notes, setNotes] = useState(\"\");\n\n  const BASE_Url = \"https://api.bigdatacloud.net/data/reverse-geocode-client\";\n  useEffect(function () {\n    async function fetchCitiesData() {\n      try {\n        setIsGeoLoading(true);\n        const res = await fetch(`%{BASE_URL}?latitude=${lat}&longitude=${lng}`);\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsGeoLoading(false);\n      }\n    }\n  }, []);\n\n  return (\n    <form className={styles.form}>\n      <div className={styles.row}>\n        <label htmlFor=\"cityName\">City name</label>\n        <input\n          id=\"cityName\"\n          onChange={(e) => setCityName(e.target.value)}\n          value={cityName}\n        />\n        {/* <span className={styles.flag}>{emoji}</span> */}\n      </div>\n\n      <div className={styles.row}>\n        <label htmlFor=\"date\">When did you go to {cityName}?</label>\n        <input\n          id=\"date\"\n          onChange={(e) => setDate(e.target.value)}\n          value={date}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label htmlFor=\"notes\">Notes about your trip to {cityName}</label>\n        <textarea\n          id=\"notes\"\n          onChange={(e) => setNotes(e.target.value)}\n          value={notes}\n        />\n      </div>\n\n      <div className={styles.buttons}>\n        <Button type=\"primary\">Add</Button>\n        <BackButton />\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}