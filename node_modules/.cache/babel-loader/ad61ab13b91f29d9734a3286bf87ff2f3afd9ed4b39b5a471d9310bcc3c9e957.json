{"ast":null,"code":"// \"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=0&longitude=0\"\nimport{useState}from\"react\";import Button from\"./Button\";import styles from\"./Form.module.css\";// import { useNavigate } from \"react-router-dom\";\nimport BackButton from\"./BackButton\";import{useUrlPosition}from\"../hooks/useUrlPosition\";import{useEffect}from\"react\";import Message from\"./Message\";import Spinner from\"./Spinner\";import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import{useCities}from\"../contexts/CitiesContext\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function convertToEmoji(countryCode){const codePoints=countryCode.toUpperCase().split(\"\").map(char=>127397+char.charCodeAt());return String.fromCodePoint(...codePoints);}function Form(){const navigate=useNavigate();const[lat,lng]=useUrlPosition();console.log(lat);const[isGeoLoading,setIsGeoLoading]=useState(false);const[cityName,setCityName]=useState(\"\");const[emoji,setEmoji]=useState(\"\");const[country,setCountry]=useState(\"\");const[date,setDate]=useState(new Date());const[notes,setNotes]=useState(\"\");const[geoCodingError,setGeoCodingError]=useState(\"\");const{createCity,isLoading}=useCities();const BASE_URL=\"https://api.bigdatacloud.net/data/reverse-geocode-client\";useEffect(function(){if(!lat&&!lng)return;async function fetchCitiesData(){try{setGeoCodingError(\"\");setIsGeoLoading(true);const res=await fetch(\"\".concat(BASE_URL,\"?latitude=\").concat(lat,\"&longitude=\").concat(lng));const data=await res.json();if(!data.countryCode){throw new Error(\"That doesn't seem to be a city. Click somewhere else\");}setCityName(data.city||data.locality||\"\");setCountry(data.countryName);setEmoji(convertToEmoji(data.countryCode));console.log(data);}catch(err){setGeoCodingError(err.message);}finally{setIsGeoLoading(false);}}fetchCitiesData();},[lat,lng]);async function handleSubmit(e){e.preventDefault();if(!cityName||!date)return\"Form validation failed\";const newCity={cityName,country,emoji,date,notes,position:{lat,lng}};await createCity(newCity);navigate(\"/app/cities\");}if(!lat&&!lng)return/*#__PURE__*/_jsx(Message,{message:\"Start by adding cities by clicking on the map\"});if(isGeoLoading)return/*#__PURE__*/_jsx(Spinner,{});if(geoCodingError)return/*#__PURE__*/_jsx(Message,{message:geoCodingError});return/*#__PURE__*/_jsxs(\"form\",{className:\"\".concat(styles.form,\" \").concat(isLoading?styles.loading:\"\"),onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.row,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cityName\",children:\"City Name \"}),/*#__PURE__*/_jsx(\"input\",{id:\"cityName\",onChange:e=>setCityName(e.target.value),value:cityName}),/*#__PURE__*/_jsx(\"span\",{className:styles.flag,children:emoji})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.row,children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"date\",children:[\"When did you go to \",cityName,\"?\"]}),/*#__PURE__*/_jsx(DatePicker,{onChange:date=>setDate(date),id:\"date\",selected:date,dateFormat:\"dd/MM/yyyy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.row,children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"notes\",children:[\"Notes about your trip to \",cityName]}),/*#__PURE__*/_jsx(\"textarea\",{id:\"notes\",onChange:e=>setNotes(e.target.value),value:notes})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttons,children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:handleSubmit,children:\"Add\"}),/*#__PURE__*/_jsx(BackButton,{})]})]});}export default Form;","map":{"version":3,"names":["useState","Button","styles","BackButton","useUrlPosition","useEffect","Message","Spinner","DatePicker","useCities","useNavigate","jsx","_jsx","jsxs","_jsxs","convertToEmoji","countryCode","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","Form","navigate","lat","lng","console","log","isGeoLoading","setIsGeoLoading","cityName","setCityName","emoji","setEmoji","country","setCountry","date","setDate","Date","notes","setNotes","geoCodingError","setGeoCodingError","createCity","isLoading","BASE_URL","fetchCitiesData","res","fetch","concat","data","json","Error","city","locality","countryName","err","message","handleSubmit","e","preventDefault","newCity","position","className","form","loading","onSubmit","children","row","htmlFor","id","onChange","target","value","flag","selected","dateFormat","buttons","type","onClick"],"sources":["E:/Complete Web Development/worldwise/src/components/Form.jsx"],"sourcesContent":["// \"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=0&longitude=0\"\n\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport styles from \"./Form.module.css\";\n// import { useNavigate } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport { useUrlPosition } from \"../hooks/useUrlPosition\";\nimport { useEffect } from \"react\";\nimport Message from \"./Message\";\nimport Spinner from \"./Spinner\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useCities } from \"../contexts/CitiesContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport function convertToEmoji(countryCode) {\n  const codePoints = countryCode\n    .toUpperCase()\n    .split(\"\")\n    .map((char) => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\n\nfunction Form() {\n  const navigate = useNavigate();\n  const [lat, lng] = useUrlPosition();\n  console.log(lat);\n  const [isGeoLoading, setIsGeoLoading] = useState(false);\n  const [cityName, setCityName] = useState(\"\");\n  const [emoji, setEmoji] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [notes, setNotes] = useState(\"\");\n  const [geoCodingError, setGeoCodingError] = useState(\"\");\n  const { createCity, isLoading } = useCities();\n\n  const BASE_URL = \"https://api.bigdatacloud.net/data/reverse-geocode-client\";\n\n  useEffect(\n    function () {\n      if (!lat && !lng) return;\n      async function fetchCitiesData() {\n        try {\n          setGeoCodingError(\"\");\n          setIsGeoLoading(true);\n          const res = await fetch(\n            `${BASE_URL}?latitude=${lat}&longitude=${lng}`\n          );\n          const data = await res.json();\n\n          if (!data.countryCode) {\n            throw new Error(\n              \"That doesn't seem to be a city. Click somewhere else\"\n            );\n          }\n          setCityName(data.city || data.locality || \"\");\n          setCountry(data.countryName);\n          setEmoji(convertToEmoji(data.countryCode));\n          console.log(data);\n        } catch (err) {\n          setGeoCodingError(err.message);\n        } finally {\n          setIsGeoLoading(false);\n        }\n      }\n      fetchCitiesData();\n    },\n    [lat, lng]\n  );\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!cityName || !date) return \"Form validation failed\";\n    const newCity = {\n      cityName,\n      country,\n      emoji,\n      date,\n      notes,\n      position: { lat, lng },\n    };\n\n    await createCity(newCity);\n    navigate(\"/app/cities\");\n  }\n\n  if (!lat && !lng)\n    return (\n      <Message message={`Start by adding cities by clicking on the map`} />\n    );\n\n  if (isGeoLoading) return <Spinner />;\n  if (geoCodingError) return <Message message={geoCodingError}></Message>;\n  return (\n    <form\n      className={`${styles.form} ${isLoading ? styles.loading : \"\"}`}\n      onSubmit={handleSubmit}\n    >\n      <div className={styles.row}>\n        <label htmlFor=\"cityName\">City Name </label>\n        <input\n          id=\"cityName\"\n          onChange={(e) => setCityName(e.target.value)}\n          value={cityName}\n        />\n        <span className={styles.flag}>{emoji}</span>\n      </div>\n\n      <div className={styles.row}>\n        <label htmlFor=\"date\">When did you go to {cityName}?</label>\n        {/* <input\n          id=\"date\"\n          onChange={(e) => setDate(e.target.value)}\n          value={date}\n        /> */}\n\n        <DatePicker\n          onChange={(date) => setDate(date)}\n          id=\"date\"\n          selected={date}\n          dateFormat=\"dd/MM/yyyy\"\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label htmlFor=\"notes\">Notes about your trip to {cityName}</label>\n        <textarea\n          id=\"notes\"\n          onChange={(e) => setNotes(e.target.value)}\n          value={notes}\n        />\n      </div>\n\n      <div className={styles.buttons}>\n        <Button type=\"primary\" onClick={handleSubmit}>\n          Add\n        </Button>\n        <BackButton />\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}