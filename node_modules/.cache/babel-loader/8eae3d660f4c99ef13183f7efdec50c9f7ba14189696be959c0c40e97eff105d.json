{"ast":null,"code":"var _jsxFileName = \"E:\\\\Complete Web Development\\\\worldwise\\\\src\\\\components\\\\Form.jsx\",\n  _s = $RefreshSig$();\n// \"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=0&longitude=0\"\n\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport styles from \"./Form.module.css\";\n// import { useNavigate } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport { useUrlPosition } from \"../hooks/useUrlPosition\";\nimport { useEffect } from \"react\";\nimport Message from \"./Message\";\nimport Spinner from \"./Spinner\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useCities } from \"../contexts/CitiesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function convertToEmoji(countryCode) {\n  const codePoints = countryCode.toUpperCase().split(\"\").map(char => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\nfunction Form() {\n  _s();\n  const [lat, lng] = useUrlPosition();\n  console.log(lat);\n  const [isGeoLoading, setIsGeoLoading] = useState(false);\n  const [cityName, setCityName] = useState(\"\");\n  const [emoji, setEmoji] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [notes, setNotes] = useState(\"\");\n  const [geoCodingError, setGeoCodingError] = useState(\"\");\n  const {\n    createCity\n  } = useCities();\n  const BASE_URL = \"https://api.bigdatacloud.net/data/reverse-geocode-client\";\n  useEffect(function () {\n    if (!lat && !lng) return;\n    async function fetchCitiesData() {\n      try {\n        setGeoCodingError(\"\");\n        setIsGeoLoading(true);\n        const res = await fetch(`${BASE_URL}?latitude=${lat}&longitude=${lng}`);\n        const data = await res.json();\n        if (!data.countryCode) {\n          throw new Error(\"That doesn't seem to be a city. Click somewhere else\");\n        }\n        setCityName(data.city || data.locality || \"\");\n        setCountry(data.countryName);\n        setEmoji(convertToEmoji(data.countryCode));\n        console.log(data);\n      } catch (err) {\n        setGeoCodingError(err.message);\n      } finally {\n        setIsGeoLoading(false);\n      }\n    }\n    fetchCitiesData();\n  }, [lat, lng]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!cityName || !date) return \"Form validation failed\";\n    const newCity = {\n      cityName,\n      country,\n      emoji,\n      date,\n      notes,\n      position: {\n        lat,\n        lng\n      }\n    };\n    createCity(newCity);\n  }\n  if (!lat && !lng) return /*#__PURE__*/_jsxDEV(Message, {\n    message: `Start by adding cities by clicking on the map`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n  if (isGeoLoading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 28\n  }, this);\n  if (geoCodingError) return /*#__PURE__*/_jsxDEV(Message, {\n    message: geoCodingError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cityName\",\n        children: \"City Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"cityName\",\n        onChange: e => setCityName(e.target.value),\n        value: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.flag,\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: [\"When did you go to \", cityName, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        onChange: date => setDate(date),\n        id: \"date\",\n        selected: date,\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"notes\",\n        children: [\"Notes about your trip to \", cityName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"notes\",\n        onChange: e => setNotes(e.target.value),\n        value: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleSubmit,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"FPI/nN/CiB5Cz7iljxxfYezHu2o=\", false, function () {\n  return [useUrlPosition, useCities];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Button","styles","BackButton","useUrlPosition","useEffect","Message","Spinner","DatePicker","useCities","jsxDEV","_jsxDEV","convertToEmoji","countryCode","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","Form","_s","lat","lng","console","log","isGeoLoading","setIsGeoLoading","cityName","setCityName","emoji","setEmoji","country","setCountry","date","setDate","Date","notes","setNotes","geoCodingError","setGeoCodingError","createCity","BASE_URL","fetchCitiesData","res","fetch","data","json","Error","city","locality","countryName","err","message","handleSubmit","e","preventDefault","newCity","position","fileName","_jsxFileName","lineNumber","columnNumber","className","form","onSubmit","children","row","htmlFor","id","onChange","target","value","flag","selected","dateFormat","buttons","type","onClick","_c","$RefreshReg$"],"sources":["E:/Complete Web Development/worldwise/src/components/Form.jsx"],"sourcesContent":["// \"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=0&longitude=0\"\n\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport styles from \"./Form.module.css\";\n// import { useNavigate } from \"react-router-dom\";\nimport BackButton from \"./BackButton\";\nimport { useUrlPosition } from \"../hooks/useUrlPosition\";\nimport { useEffect } from \"react\";\nimport Message from \"./Message\";\nimport Spinner from \"./Spinner\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useCities } from \"../contexts/CitiesContext\";\n\nexport function convertToEmoji(countryCode) {\n  const codePoints = countryCode\n    .toUpperCase()\n    .split(\"\")\n    .map((char) => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\n\nfunction Form() {\n  const [lat, lng] = useUrlPosition();\n  console.log(lat);\n  const [isGeoLoading, setIsGeoLoading] = useState(false);\n  const [cityName, setCityName] = useState(\"\");\n  const [emoji, setEmoji] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [notes, setNotes] = useState(\"\");\n  const [geoCodingError, setGeoCodingError] = useState(\"\");\n  const {createCity} = useCities();\n\n  const BASE_URL = \"https://api.bigdatacloud.net/data/reverse-geocode-client\";\n\n  useEffect(\n    function () {\n      if (!lat && !lng) return;\n      async function fetchCitiesData() {\n        try {\n          setGeoCodingError(\"\");\n          setIsGeoLoading(true);\n          const res = await fetch(\n            `${BASE_URL}?latitude=${lat}&longitude=${lng}`\n          );\n          const data = await res.json();\n\n          if (!data.countryCode) {\n            throw new Error(\n              \"That doesn't seem to be a city. Click somewhere else\"\n            );\n          }\n          setCityName(data.city || data.locality || \"\");\n          setCountry(data.countryName);\n          setEmoji(convertToEmoji(data.countryCode));\n          console.log(data);\n        } catch (err) {\n          setGeoCodingError(err.message);\n        } finally {\n          setIsGeoLoading(false);\n        }\n      }\n      fetchCitiesData();\n    },\n    [lat, lng]\n  );\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!cityName || !date) return \"Form validation failed\";\n    const newCity = {\n      cityName,\n      country,\n      emoji,\n      date,\n      notes,\n      position: { lat, lng },\n    };\n\n    createCity(newCity);\n  }\n\n  if (!lat && !lng)\n    return (\n      <Message message={`Start by adding cities by clicking on the map`} />\n    );\n\n  if (isGeoLoading) return <Spinner />;\n  if (geoCodingError) return <Message message={geoCodingError}></Message>;\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <div className={styles.row}>\n        <label htmlFor=\"cityName\">City Name </label>\n        <input\n          id=\"cityName\"\n          onChange={(e) => setCityName(e.target.value)}\n          value={cityName}\n        />\n        <span className={styles.flag}>{emoji}</span>\n      </div>\n\n      <div className={styles.row}>\n        <label htmlFor=\"date\">When did you go to {cityName}?</label>\n        {/* <input\n          id=\"date\"\n          onChange={(e) => setDate(e.target.value)}\n          value={date}\n        /> */}\n\n        <DatePicker\n          onChange={(date) => setDate(date)}\n          id=\"date\"\n          selected={date}\n          dateFormat=\"dd/MM/yyyy\"\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label htmlFor=\"notes\">Notes about your trip to {cityName}</label>\n        <textarea\n          id=\"notes\"\n          onChange={(e) => setNotes(e.target.value)}\n          value={notes}\n        />\n      </div>\n\n      <div className={styles.buttons}>\n        <Button type=\"primary\" onClick={handleSubmit}>\n          Add\n        </Button>\n        <BackButton />\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}