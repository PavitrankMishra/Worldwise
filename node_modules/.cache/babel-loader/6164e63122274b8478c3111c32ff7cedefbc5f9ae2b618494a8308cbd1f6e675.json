{"ast":null,"code":"import{createContext,useEffect,useState,useContext}from\"react\";// 1) Create a context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const CitiesContext=/*#__PURE__*/createContext();const BASE_URL=\"http://localhost:8000\";function CitiesProvider(_ref){let{children}=_ref;const[cities,setCities]=useState([]);const[isLoading,setIsLoading]=useState(false);const[currentCity,setCurrentCity]=useState({});useEffect(function(){async function fetchCities(){try{setIsLoading(true);const res=await fetch(\"\".concat(BASE_URL,\"/cities\"));const data=await res.json();console.log(data);setCities(data);}catch(err){console.log(err);}finally{setIsLoading(false);}}fetchCities();},[]);async function getCity(id){try{setIsLoading(true);const res=await fetch(\"\".concat(BASE_URL,\"/cities/\").concat(id));const data=await res.json();setCurrentCity(data);}catch(err){console.log(err);}finally{setIsLoading(false);}}async function createCity(newCity){try{setIsLoading(true);const res=await fetch(\"\".concat(BASE_URL,\"/cities\"),{method:\"POST\",body:JSON.stringify(newCity),headers:{\"ContenT-Type\":\"application/json\"}});const data=await res.json();setCities(cities=>[...cities,data]);}catch(err){console.log(err);}finally{setIsLoading(false);}}async function deleteCity(id){try{setIsLoading(true);const res=await fetch(\"\".concat(BASE_URL,\"/cities/\").concat(id),{method:\"DELETE\"});setCities(cities=>cities.filter(city=>city.id!==id));}catch(err){console.log(\"The was an error deleting the city\");}finally{setIsLoading(false);}}return/*#__PURE__*/ (// 2)Provide a Context\n_jsx(CitiesContext.Provider,{value:{cities,isLoading,currentCity,getCity,createCity,deleteCity},children:children}));}function useCities(){const context=useContext(CitiesContext);if(context===undefined)throw new Error(\"Cities context was used outside the Cities Provider\");return context;}export{CitiesProvider,useCities};","map":{"version":3,"names":["createContext","useEffect","useState","useContext","jsx","_jsx","CitiesContext","BASE_URL","CitiesProvider","_ref","children","cities","setCities","isLoading","setIsLoading","currentCity","setCurrentCity","fetchCities","res","fetch","concat","data","json","console","log","err","getCity","id","createCity","newCity","method","body","JSON","stringify","headers","deleteCity","filter","city","Provider","value","useCities","context","undefined","Error"],"sources":["E:/Complete Web Development/worldwise/src/contexts/CitiesContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState, useContext } from \"react\";\r\n\r\n// 1) Create a context\r\nconst CitiesContext = createContext();\r\n\r\nconst BASE_URL = `http://localhost:8000`;\r\n\r\nfunction CitiesProvider({ children }) {\r\n  const [cities, setCities] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentCity, setCurrentCity] = useState({});\r\n\r\n  useEffect(function () {\r\n    async function fetchCities() {\r\n      try {\r\n        setIsLoading(true);\r\n        const res = await fetch(`${BASE_URL}/cities`);\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setCities(data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    fetchCities();\r\n  }, []);\r\n\r\n  async function getCity(id) {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await fetch(`${BASE_URL}/cities/${id}`);\r\n      const data = await res.json();\r\n      setCurrentCity(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function createCity(newCity) {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await fetch(`${BASE_URL}/cities`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newCity),\r\n        headers: {\r\n          \"ContenT-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const data = await res.json();\r\n      setCities((cities) => [...cities, data]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function deleteCity(id) {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await fetch(`${BASE_URL}/cities/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      setCities((cities) => cities.filter((city) => city.id !== id));\r\n    } catch (err) {\r\n      console.log(\"The was an error deleting the city\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    // 2)Provide a Context\r\n    <CitiesContext.Provider\r\n      value={{\r\n        cities,\r\n        isLoading,\r\n        currentCity,\r\n        getCity,\r\n        createCity,\r\n        deleteCity,\r\n      }}\r\n    >\r\n      {children}\r\n    </CitiesContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useCities() {\r\n  const context = useContext(CitiesContext);\r\n  if (context === undefined)\r\n    throw new Error(\"Cities context was used outside the Cities Provider\");\r\n  return context;\r\n}\r\nexport { CitiesProvider, useCities };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}